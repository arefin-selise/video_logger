{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arefin Hossain\\\\eclipse-workspace\\\\users-management-system-java-react\\\\vlogger\\\\src\\\\components\\\\videopage\\\\VideoUploadModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoUploadModal({\n  isOpen,\n  onClose,\n  id\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  console.log(id);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage(\"Please select a file to upload.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(\"http://localhost:8005/admin/upload\", {\n        method: \"PUT\",\n        body: formData,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setMessage(\"Video uploaded successfully.\");\n        setFile(null); // Reset the file input\n        onClose(); // Close the modal after successful upload\n      } else {\n        const errorText = await response.text();\n        setMessage(`Upload failed: ${errorText}`);\n      }\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n      setMessage(\"An error occurred while uploading the video.\");\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoUploadModal, \"90rxx89DAeVfO1aRLt0hivI8MC0=\");\n_c = VideoUploadModal;\nexport default VideoUploadModal;\nvar _c;\n$RefreshReg$(_c, \"VideoUploadModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VideoUploadModal","isOpen","onClose","id","_s","file","setFile","message","setMessage","console","log","handleFileChange","event","target","files","handleUpload","formData","FormData","append","token","localStorage","getItem","response","fetch","method","body","headers","Authorization","ok","errorText","text","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Arefin Hossain/eclipse-workspace/users-management-system-java-react/vlogger/src/components/videopage/VideoUploadModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction VideoUploadModal({ isOpen, onClose, id }) {\r\n    const [file, setFile] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    console.log(id);\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) {\r\n            setMessage(\"Please select a file to upload.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch(\"http://localhost:8005/admin/upload\", {\r\n                method: \"PUT\",\r\n                body: formData,\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n\r\n            if (response.ok) {\r\n                setMessage(\"Video uploaded successfully.\");\r\n                setFile(null);  // Reset the file input\r\n                onClose();       // Close the modal after successful upload\r\n            } else {\r\n                const errorText = await response.text();\r\n                setMessage(`Upload failed: ${errorText}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error uploading video:\", error);\r\n            setMessage(\"An error occurred while uploading the video.\");\r\n        }\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <h2>Upload Video</h2>\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n                <button onClick={handleUpload}>Upload</button>\r\n                <button onClick={onClose}>Close</button>\r\n                {message && <p>{message}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoUploadModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}