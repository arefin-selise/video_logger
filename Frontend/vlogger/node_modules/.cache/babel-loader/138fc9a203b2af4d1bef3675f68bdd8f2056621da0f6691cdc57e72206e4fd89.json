{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arefin Hossain\\\\eclipse-workspace\\\\users-management-system-java-react\\\\vlogger\\\\src\\\\components\\\\videopage\\\\VideoAssignModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport UserService from \"../service/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoAssignModal({\n  isOpen,\n  onClose,\n  id\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const [savedData, setSavedData] = useState({\n    userId: null,\n    videoId: null\n  });\n  const updateSavedData = (userId, videoId) => {\n    setSavedData(prevData => ({\n      ...prevData,\n      userId,\n      // Update userId\n      videoId // Update videoId\n    }));\n  };\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n      const response = await UserService.getAllUsers(token);\n      console.log(response);\n      setUsers(response.usersList); // Assuming the list of users is under the key 'ourUsersList'\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const assignVideo = async userId => {\n    try {\n      // Prompt for confirmation before assign the user\n      const confirmAssign = window.confirm('Are you sure you want to assign this video?');\n      const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n      if (confirmAssign) {\n        updateSavedData(userId, id);\n        console.log(savedData);\n        await UserService.assignVideo(savedData, token);\n        // After assigning the user, fetch the updated list of videos\n        setMessage(\"Video assigned successfully.\");\n        await fetchUsers();\n      }\n    } catch (error) {\n      console.error('Error assigning video:', error);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-management-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.filter(user => user.disable === 0 && user.email !== 'admin123@admin.vlog') // Filter out users with disable set to true\n            .map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"small-button\",\n                  onClick: () => assignVideo(user.id),\n                  children: \"Assign\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoAssignModal, \"14vu4AQfgsn5u88kM8GvA9gU8Wk=\");\n_c = VideoAssignModal;\nexport default VideoAssignModal;\nvar _c;\n$RefreshReg$(_c, \"VideoAssignModal\");","map":{"version":3,"names":["React","useEffect","useState","UserService","jsxDEV","_jsxDEV","VideoAssignModal","isOpen","onClose","id","_s","users","setUsers","message","setMessage","fetchUsers","savedData","setSavedData","userId","videoId","updateSavedData","prevData","token","localStorage","getItem","response","getAllUsers","console","log","usersList","error","assignVideo","confirmAssign","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","user","disable","email","map","name","username","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Arefin Hossain/eclipse-workspace/users-management-system-java-react/vlogger/src/components/videopage/VideoAssignModal.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport UserService from \"../service/UserService\";\r\n\r\nfunction VideoAssignModal({ isOpen, onClose, id }) {\r\n    const [users, setUsers] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const [savedData, setSavedData] = useState({\r\n        userId: null,\r\n        videoId: null\r\n    });\r\n\r\n    const updateSavedData = (userId, videoId) => {\r\n        setSavedData((prevData) => ({\r\n            ...prevData,\r\n            userId,       // Update userId\r\n            videoId       // Update videoId\r\n        }));\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token'); // Retrieve the token from localStorage\r\n            const response = await UserService.getAllUsers(token);\r\n            console.log(response);\r\n            setUsers(response.usersList); // Assuming the list of users is under the key 'ourUsersList'\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    };\r\n\r\n    const assignVideo = async (userId) => {\r\n        try {\r\n            // Prompt for confirmation before assign the user\r\n            const confirmAssign = window.confirm('Are you sure you want to assign this video?');\r\n\r\n            const token = localStorage.getItem('token'); // Retrieve the token from localStorage\r\n            if (confirmAssign) {\r\n                updateSavedData(userId, id);\r\n                console.log(savedData);\r\n                await UserService.assignVideo(savedData, token);\r\n                // After assigning the user, fetch the updated list of videos\r\n                setMessage(\"Video assigned successfully.\");\r\n                await fetchUsers();\r\n            }\r\n        } catch (error) {\r\n            console.error('Error assigning video:', error);\r\n        }\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                {message && <p>{message}</p>}\r\n                <div className=\"user-management-container\">\r\n                    <h2>Users List</h2>\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Username</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {users\r\n                            .filter(user => (user.disable === 0 && user.email !== 'admin123@admin.vlog')) // Filter out users with disable set to true\r\n                            .map(user => (\r\n                                <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.username}</td>\r\n                                    <td>\r\n                                        <button className=\"small-button\" onClick={() => assignVideo(user.id)}>Assign\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <button className=\"small-button\" onClick={onClose}>Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoAssignModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}