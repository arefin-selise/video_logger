{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arefin Hossain\\\\eclipse-workspace\\\\users-management-system-java-react\\\\vlogger\\\\src\\\\components\\\\videopage\\\\VideoPlaybackModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport UserService from \"../service/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoPlaybackModal({\n  isOpen,\n  onClose,\n  id,\n  name\n}) {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const videoUrl = `http://localhost:8005/public/${name}`;\n  const completeVideo = async userId => {\n    try {\n      // Prompt for confirmation before assign the user\n      const confirmComplete = window.confirm('Are you sure you want to confirm complete this video?');\n      const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n      if (confirmComplete) {\n        const payload = {\n          userId,\n          videoId: id\n        };\n        console.log(payload);\n        await UserService.assignVideo(payload, token);\n        // After assigning the user, fetch the updated list of videos\n        setMessage(\"Video assigned successfully.\");\n      }\n    } catch (error) {\n      console.error('Error assigning video:', error);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        width: \"600\",\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoUrl,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: () => {\n          completeVideo(id);\n        },\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"small-button\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoPlaybackModal, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = VideoPlaybackModal;\nexport default VideoPlaybackModal;\nvar _c;\n$RefreshReg$(_c, \"VideoPlaybackModal\");","map":{"version":3,"names":["React","useState","UserService","jsxDEV","_jsxDEV","VideoPlaybackModal","isOpen","onClose","id","name","_s","message","setMessage","videoUrl","completeVideo","userId","confirmComplete","window","confirm","token","localStorage","getItem","payload","videoId","console","log","assignVideo","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","controls","src","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Arefin Hossain/eclipse-workspace/users-management-system-java-react/vlogger/src/components/videopage/VideoPlaybackModal.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport UserService from \"../service/UserService\";\r\n\r\nfunction VideoPlaybackModal({ isOpen, onClose, id, name }) {\r\n    const [message, setMessage] = useState(\"\");\r\n    const videoUrl = `http://localhost:8005/public/${name}`;\r\n\r\n    const completeVideo = async (userId) => {\r\n        try {\r\n            // Prompt for confirmation before assign the user\r\n            const confirmComplete = window.confirm('Are you sure you want to confirm complete this video?');\r\n\r\n            const token = localStorage.getItem('token'); // Retrieve the token from localStorage\r\n            if (confirmComplete) {\r\n                const payload = {\r\n                    userId,\r\n                    videoId: id\r\n                }\r\n                console.log(payload);\r\n                await UserService.assignVideo(payload, token);\r\n                // After assigning the user, fetch the updated list of videos\r\n                setMessage(\"Video assigned successfully.\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Error assigning video:', error);\r\n        }\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                {message && <p>{message}</p>}\r\n                <video width=\"600\" controls>\r\n                    <source src={videoUrl} type=\"video/mp4\"/>\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n                <button className=\"small-button\" onClick={() => {\r\n                    completeVideo(id)\r\n                }}>Complete</button>\r\n                <button className=\"small-button\" onClick={onClose}>Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoPlaybackModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,kBAAkBA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,EAAE;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAG,gCAAgCJ,IAAI,EAAE;EAEvD,MAAMK,aAAa,GAAG,MAAOC,MAAM,IAAK;IACpC,IAAI;MACA;MACA,MAAMC,eAAe,GAAGC,MAAM,CAACC,OAAO,CAAC,uDAAuD,CAAC;MAE/F,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,IAAIL,eAAe,EAAE;QACjB,MAAMM,OAAO,GAAG;UACZP,MAAM;UACNQ,OAAO,EAAEf;QACb,CAAC;QACDgB,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;QACpB,MAAMpB,WAAW,CAACwB,WAAW,CAACJ,OAAO,EAAEH,KAAK,CAAC;QAC7C;QACAP,UAAU,CAAC,8BAA8B,CAAC;MAC9C;IACJ,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,IAAI,CAACrB,MAAM,EAAE,OAAO,IAAI;EAExB,oBACIF,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,eAClBzB,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAC,QAAA,GACzBlB,OAAO,iBAAIP,OAAA;QAAAyB,QAAA,EAAIlB;MAAO;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B7B,OAAA;QAAO8B,KAAK,EAAC,KAAK;QAACC,QAAQ;QAAAN,QAAA,gBACvBzB,OAAA;UAAQgC,GAAG,EAAEvB,QAAS;UAACwB,IAAI,EAAC;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,gDAE7C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACR7B,OAAA;QAAQwB,SAAS,EAAC,cAAc;QAACU,OAAO,EAAEA,CAAA,KAAM;UAC5CxB,aAAa,CAACN,EAAE,CAAC;QACrB,CAAE;QAAAqB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpB7B,OAAA;QAAQwB,SAAS,EAAC,cAAc;QAACU,OAAO,EAAE/B,OAAQ;QAAAsB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvB,EAAA,CA1CQL,kBAAkB;AAAAkC,EAAA,GAAlBlC,kBAAkB;AA4C3B,eAAeA,kBAAkB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}