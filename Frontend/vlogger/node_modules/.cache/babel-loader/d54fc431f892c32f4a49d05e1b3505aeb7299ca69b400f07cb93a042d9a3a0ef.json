{"ast":null,"code":"import axios from \"axios\";\nclass UserService {\n  static async login(username, password) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {\n        username,\n        password\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async register(userData, token) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/register`, userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllUsers(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllVideos(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-videos`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getYourProfile(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getUserById(userId, token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async deleteUser(userId, token) {\n    try {\n      const response = await axios.delete(`${UserService.BASE_URL}/admin/assign/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async updateUser(userId, userData, token) {\n    try {\n      const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async assignVideo(videoId, userId, token) {\n    try {\n      const response = await axios.delete(`${UserService.BASE_URL}/admin/assign/${videoId}/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**AUTHENTICATION CHECKER */\n  static logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem('role');\n    return role === 'ADMIN';\n  }\n  static isUser() {\n    const role = localStorage.getItem('role');\n    return role === 'USER';\n  }\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\nUserService.BASE_URL = \"http://localhost:8005\";\nexport default UserService;","map":{"version":3,"names":["axios","UserService","login","username","password","response","post","BASE_URL","data","err","register","userData","token","headers","Authorization","getAllUsers","get","getAllVideos","getYourProfile","getUserById","userId","deleteUser","delete","updateUser","put","assignVideo","videoId","logout","localStorage","removeItem","isAuthenticated","getItem","isAdmin","role","isUser","adminOnly"],"sources":["C:/Users/Arefin Hossain/eclipse-workspace/users-management-system-java-react/vlogger/src/components/service/UserService.js"],"sourcesContent":["import axios from \"axios\";\n\nclass UserService{\n    static BASE_URL = \"http://localhost:8005\"\n\n    static async login(username, password){\n        try{\n            const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {username, password})\n            return response.data;\n\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async register(userData, token){\n        try{\n            const response = await axios.post(`${UserService.BASE_URL}/auth/register`, userData, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async getAllUsers(token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async getAllVideos(token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-videos`,\n                {\n                    headers: {Authorization: `Bearer ${token}`}\n                })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n\n    static async getYourProfile(token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`,\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async getUserById(userId, token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-users/${userId}`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async deleteUser(userId, token){\n        try{\n            const response = await axios.delete(`${UserService.BASE_URL}/admin/assign/${userId}`,\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n\n    static async updateUser(userId, userData, token){\n        try{\n            const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData,\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async assignVideo(videoId, userId, token){\n        try{\n            const response = await axios.delete(`${UserService.BASE_URL}/admin/assign/${videoId}/${userId}`,\n                {\n                    headers: {Authorization: `Bearer ${token}`}\n                })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    /**AUTHENTICATION CHECKER */\n    static logout(){\n        localStorage.removeItem('token')\n        localStorage.removeItem('role')\n    }\n\n    static isAuthenticated(){\n        const token = localStorage.getItem('token')\n        return !!token\n    }\n\n    static isAdmin(){\n        const role = localStorage.getItem('role')\n        return role === 'ADMIN'\n    }\n\n    static isUser(){\n        const role = localStorage.getItem('role')\n        return role === 'USER'\n    }\n\n    static adminOnly(){\n        return this.isAuthenticated() && this.isAdmin();\n    }\n\n}\n\nexport default UserService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}