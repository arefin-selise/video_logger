{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arefin Hossain\\\\eclipse-workspace\\\\users-management-system-java-react\\\\vlogger\\\\src\\\\components\\\\userspage\\\\UserManagementPage.jsx\",\n  _s = $RefreshSig$();\n// components/UserManagementPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserService from '../service/UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserManagementPage() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Fetch users data when the component mounts\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n      const response = await UserService.getAllUsers(token);\n      console.log(response);\n      setUsers(response.usersList); // Assuming the list of users is under the key 'ourUsersList'\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const deleteUser = async userId => {\n    try {\n      // Prompt for confirmation before deleting the user\n      const confirmDelete = window.confirm('Are you sure you want to delete this user?');\n      const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n      if (confirmDelete) {\n        await UserService.deleteUser(userId, token);\n        // After deleting the user, fetch the updated list of users\n        await fetchUsers();\n      }\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users Management Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reg-button\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.filter(user => user.disable === 0) // Filter out users with disable set to true\n        .map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => deleteUser(user.id),\n              disabled: user.email === 'admin123@admin.vlog' // Disable button if user.role is 'admin'\n              ,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/update-user/${user.id}`,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManagementPage, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserManagementPage;\nexport default UserManagementPage;\nvar _c;\n$RefreshReg$(_c, \"UserManagementPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","UserService","jsxDEV","_jsxDEV","UserManagementPage","_s","users","setUsers","fetchUsers","token","localStorage","getItem","response","getAllUsers","console","log","usersList","error","deleteUser","userId","confirmDelete","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","filter","user","disable","map","id","name","email","username","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Arefin Hossain/eclipse-workspace/users-management-system-java-react/vlogger/src/components/userspage/UserManagementPage.jsx"],"sourcesContent":["// components/UserManagementPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserService from '../service/UserService';\n\nfunction UserManagementPage() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    // Fetch users data when the component mounts\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n\n      const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n      const response = await UserService.getAllUsers(token);\n      console.log(response);\n      setUsers(response.usersList); // Assuming the list of users is under the key 'ourUsersList'\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n\n  const deleteUser = async (userId) => {\n    try {\n      // Prompt for confirmation before deleting the user\n      const confirmDelete = window.confirm('Are you sure you want to delete this user?');\n\n      const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n      if (confirmDelete) {\n        await UserService.deleteUser(userId, token);\n        // After deleting the user, fetch the updated list of users\n        await fetchUsers();\n      }\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n\n  return (\n    <div className=\"user-management-container\">\n      <h2>Users Management Page</h2>\n      <button className='reg-button'> <Link to=\"/register\">Add User</Link></button>\n      <table>\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Username</th>\n          <th>Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n        {users\n            .filter(user => (user.disable === 0)) // Filter out users with disable set to true\n            .map(user => (\n                <tr key={user.id}>\n                  <td>{user.id}</td>\n                  <td>{user.name}</td>\n                  <td>{user.email}</td>\n                  <td>{user.username}</td>\n                  <td>\n                    <button\n                        className='delete-button'\n                        onClick={() => deleteUser(user.id)}\n                        disabled={user.email === 'admin123@admin.vlog'} // Disable button if user.role is 'admin'\n                    >\n                      Delete\n                    </button>\n                    <button>\n                      <Link to={`/update-user/${user.id}`}>\n                        Update\n                      </Link>\n                    </button>\n                  </td>\n                </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default UserManagementPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}